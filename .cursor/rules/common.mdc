---
description: rules must follow
globs: *.tsx
alwaysApply: false
---

- 使用pnpm instead of npm
- Use TypeScript for all code; prefer interfaces over types.
- Avoid enums; use objects or maps instead.
- Avoid using any or unknown unless absolutely necessary. Look for type definitions in the codebase instead.
- Avoid type assertions with as or !.
- always use await-to-js instaed try catch
- icon使用@iconify/react

- Write concise, technical TypeScript code.
- Use functional and declarative programming patterns; avoid classes.
- Prefer iteration and modularization over code duplication.
- Use descriptive variable names with auxiliary verbs (e.g., isLoaded, hasError).
- 根据seo需求是否需要client component或者server component
- 如果拆分组件请一定要支持传入组件最外边包裹的html 标签的所有属性，注意className要和里面的包裹标签合并,合并的className要使用cn函数,cn函数在lib/utils.ts文件中

Naming Conventions

- Favor named exports for components and utilities.
- Prefix GraphQL query files with use (e.g., useSiteMetadata.ts).

TypeScript Usage

- Use TypeScript for all code; prefer interfaces over types.
- Avoid enums; use objects or maps instead.
- Avoid using any or unknown unless absolutely necessary. Look for type definitions in the codebase instead.
- Avoid type assertions with as or !.

Syntax and Formatting

- Use the "function" keyword for pure functions.
- Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements.
- Use declarative JSX, keeping JSX minimal and readable.

- 使用app router模式
- 如果page需要任何component请在根目录/components/[page]/xxxxx.tsx或者如果是一个component能拆接成多个component，就是/components/[page]/[component]/xxxx.tsx
- 如果tailwind样式过多请使用class-variance-authority来拆分样式
- 使用pnpm instead of npm